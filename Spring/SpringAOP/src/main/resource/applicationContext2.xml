<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- com.random.spring.aspectjaop.AnnotationAdvisorPointcut *************************-->
	<!-- <aop:aspectj-autoproxy /> 基于注解的自动生成代理: -->
	<!-- * 底层就是AnnotationAwareAspectJAutoProxyCreator -->
	<!-- <aop:aspectj-autoproxy/>
	定义被增强的类
	<bean id="userDAO" class="com.random.spring.aspectjaop.AnnotationAdvisorPointcut.UserDAO"></bean>
	定义切面
	<bean id="myAspect" class="com.random.spring.aspectjaop.AnnotationAdvisorPointcut.MyAspect"></bean> -->
	
	
	<!-- com.random.spring.aspectjaop.asxml -->
	<!-- 定义被增强的类 -->
	<bean id="productDAO" class="com.random.spring.aspectjaop.asxml.ProductDAO"></bean>
	<!-- 定义切面 -->
	<bean id="myAspectXML" class="com.random.spring.aspectjaop.asxml.MyAspectXML"></bean>
	<!-- 定义aop配置 -->
	<aop:config>
		<!-- 定义切点 -->
		<aop:pointcut expression="execution(* com.random.spring.aspectjaop.asxml.ProductDAO.add(..))" id="mypointcut"/>
		<aop:aspect ref="myAspectXML">
			<!-- 前置通知 -->
			<!-- <aop:before method="before" pointcut-ref="mypointcut"/> -->
			<!-- 后置通知 -->
			<!-- <aop:after-returning method="afterReturing" pointcut-ref="mypointcut" returning="returnVal"/> -->
			<!-- 环绕通知 -->
			<!-- <aop:around method="around" pointcut-ref="mypointcut"/> -->
			<!-- 异常通知 -->
			<!-- <aop:after-throwing method="afterThrowing" pointcut-ref="mypointcut" throwing="e"/> -->
			<!-- 最终通知 -->
			<aop:after method="after" pointcut-ref="mypointcut"/>
		</aop:aspect>
	</aop:config>
</beans>