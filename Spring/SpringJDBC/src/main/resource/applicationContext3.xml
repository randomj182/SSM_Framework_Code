<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 引入外部属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<!-- 配置C3P0连接池 ***********************************-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- Spring事务管理环境搭建 *************************-->
	<!-- 业务层类 -->
	<bean id="accountService" class="com.random.spring.transaction.AccountServiceImpl">
		<!-- 在业务层注入Dao -->
		<property name="accountDAO" ref="accountDAO"/>		
	</bean>
	
	<!-- 持久层类 -->
	<bean id="accountDAO" class="com.random.spring.transaction.AccountDAOImpl">
		<!-- 注入连接池对象,通过连接池对象创建模板 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 基于XML的事务管理
		1、引入jar包
		2、引入相应约束（aop、tx）
		3、注册事务管理器
		4、定义增强(事务管理)
		5、AOP的配置(切点和通知的组合)
		6、编写测试类：注入Service对象，不需要注入代理对象(生成这个类的时候,已经是代理对象)
	 -->
	
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 注入连接池 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 定义一个增强 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<!-- 增强事务的属性配置 -->
		<tx:attributes>
			<tx:method name="tranfer"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置AOP 切面 即将哪些增强应用到哪些切点 -->
	<aop:config>
		<!-- 定义切点 :哪些类的哪些方法应用增强 -->
		<aop:pointcut expression="execution(* com.random.spring.transaction.AccountService+ .*(..))" id="mypointcut"/>
		<!-- 在这个切点上应用一个增强 即事务管理增强(通知(advice)) -->
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="mypointcut"/>
	</aop:config>
</beans>